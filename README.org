#+TITLE:flexdb

A Clojure library designed to flexibly use a SQL DB (SQLite and
Postgres) with adding tables and columns (DDL) on the fly.

* Installation
   :PROPERTIES:
   :CUSTOM_ID: installation
   :END:

Leiningen/Boot

#+BEGIN_EXAMPLE
    [ndevreeze/flexdb "0.4.0"]
#+END_EXAMPLE

Clojure CLI/deps.edn

#+BEGIN_EXAMPLE
    ndevreeze/flexdb {:mvn/version "0.4.0"}
#+END_EXAMPLE

[[https://clojars.org/ndevreeze/flexdb][https://img.shields.io/clojars/v/ndevreeze/flexdb.svg]]

* Usage
   :PROPERTIES:
   :CUSTOM_ID: usage
   :END:

#+BEGIN_EXAMPLE
    (require '[me.raynes.fs :as fs])
    (require '[ndevreeze.flexdb :as db])

    (let [db-name "/tmp/test-db.db"
          _ (fs/delete db-name)
          db (db/open-db-sqlite db-name)]
      (db/insert db :testtable {:col "Value of column"})
      (println "Result of db/query: " (db/query db "select * from testtable"))
      (db/close-db db))
#+END_EXAMPLE

* Testing
   :PROPERTIES:
   :CUSTOM_ID: testing
   :END:

Functional tests:

#+BEGIN_EXAMPLE
    $ lein midje
    WARNING: any? already refers to: #'clojure.core/any? in namespace: leiningen.midje, being replaced by: #'leiningen.midje/any?
    Loading module with query: SELECT   load_extension('/path/to/flexdb/resources/sqlite/linux64/percentile.so')
    Checking connection to Postgres test db...
    Ok, do Postgres testing
    nil
    All checks (105) succeeded.
#+END_EXAMPLE

Speed test:

#+BEGIN_EXAMPLE
    ndevreeze.flexdb> (ndevreeze.flexdb-test/test-speed "/tmp/test-speed-clj.db")
    Starting test
    Testing with #iterations:  10
    Testing with #iterations:  100
    Testing with #iterations:  1000
    Testing with #iterations:  10000
    #iterations: 10000
    Seconds taken:  15
    #Iter/sec:  666.6666666666667
#+END_EXAMPLE

* Starting points
   :PROPERTIES:
   :CUSTOM_ID: starting-points
   :END:

-  Use should be easy - generate a database with tables/columns
   on-the-fly.
-  Prefer keywords over strings in parameters and return values.
-  Allow strings instead of keywords in parameters, but return keywords.

* Todo
   :PROPERTIES:
   :CUSTOM_ID: todo
   :END:

-  Documentation and examples (both usage and design) - see tests for
   now
-  Use protocols or multimethods for DB specific operations
-  Speed profiling and fixing
-  Multi-insert
-  Using db as dynamic var for convenience.
-  Also see source files

* Documentation
   :PROPERTIES:
   :CUSTOM_ID: documentation
   :END:

-  See See codox generated
   [[https://ndevreeze.github.io/flexdb/api/index.html][API docs]].
-  Or: https://cljdoc.org/d/ndevreeze/flexdb/0.4.0/doc/readme

* Related and similar projects (libraries)
   :PROPERTIES:
   :CUSTOM_ID: related-and-similar-projects-libraries
   :END:

-  Datomic?
-  ORMs such as Korma - Mostly these focus either on the DDL or DML
   part, not both.

* Change log
** 0.3.0
   :PROPERTIES:
   :CUSTOM_ID: section
   :END:

-  surround all column and table names with double-quotes, wrt reserved
   (key)words. All tests succeed, but something else might break, quite
   a big change.

** 0.4.0 - 2020-06-20
   :PROPERTIES:
   :CUSTOM_ID: section-1
   :END:

-  renamed to flexdb (old: dynamicdb) and put in its own repo.

* License
   :PROPERTIES:
   :CUSTOM_ID: license
   :END:

Copyright Â© 2020 Nico de Vreeze

Distributed under the Eclipse Public License, the same as Clojure.
